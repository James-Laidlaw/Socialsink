# Generated by Django 4.2.6 on 2023-11-25 05:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("bio", models.CharField(max_length=200, null=True)),
                ("github", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "profileImage",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("is_permitted", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("is_foreign", models.BooleanField(default=False)),
                ("author_data", models.CharField(default="", max_length=1000)),
                ("foreign_author_id", models.CharField(max_length=200, null=True)),
                ("post_endpoint", models.CharField(default="", max_length=1000)),
                ("content", models.CharField(max_length=600)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("hostname", models.CharField(max_length=200)),
                ("username", models.CharField(max_length=200)),
                ("password", models.CharField(max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ServerSettings",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("auto_permit_users", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(default="Default title", max_length=200)),
                ("description", models.CharField(max_length=200, null=True)),
                ("contentType", models.CharField(default="text/plain", max_length=200)),
                ("content", models.TextField()),
                ("source", models.CharField(max_length=200, null=True)),
                ("origin", models.CharField(max_length=200, null=True)),
                ("categories", models.CharField(max_length=200, null=True)),
                ("image", models.ImageField(null=True, upload_to="images/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("publicity", models.IntegerField(default=0)),
                ("unlisted", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="main.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("context", models.CharField(max_length=200, null=True)),
                ("is_foreign", models.BooleanField(default=False)),
                ("foreign_author_id", models.CharField(max_length=200, null=True)),
                ("post_endpoint", models.CharField(default="", max_length=1000)),
                ("summary", models.CharField(default="", max_length=200)),
                ("comment_endpoint", models.CharField(default="", max_length=1000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="main.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inbox",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("endpoint", models.CharField(default="", max_length=1000)),
                ("type", models.CharField(default="", max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inbox",
                        to="main.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Friendship",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "friend",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_friends",
                        to="main.author",
                    ),
                ),
                (
                    "myself",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_friends",
                        to="main.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Follower",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("is_foreign", models.BooleanField(default=False)),
                ("foreign_follower_id", models.CharField(max_length=200, null=True)),
                ("dismissed", models.BooleanField(default=False)),
                ("accepted", models.BooleanField(default=False)),
                ("friendship", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "followee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followed_by",
                        to="main.author",
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to="main.author",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="author",
            name="follows",
            field=models.ManyToManyField(
                related_name="follower_set", through="main.Follower", to="main.author"
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="friends",
            field=models.ManyToManyField(
                related_name="friend_set", through="main.Friendship", to="main.author"
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
